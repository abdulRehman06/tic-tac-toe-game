{"version":3,"sources":["component/Square.js","component/Bord.js","component/Game.js","App.js","index.js"],"names":["Square","onClick","blockValue","variant","className","Bord","i","this","props","squares","ButtonToolbar","renderSquare","React","Game","findWineer","square","arr","a","b","c","d","e","console","log","setState","winnerFlag","startGameFlag","jumpToStepNo","index","stepNumber","state","xIsNext","history","Array","fill","slice","lasSquare","length","concat","current","status","moves","map","value","key","handleClick","ButtonGroup","vertical","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ea39cf8.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nexport default function Square({ onClick , blockValue  }) {\r\n    return (\r\n        <div>\r\n\r\n            <Button variant=\"outline-primary\"\r\n                    className=\"square\"\r\n                    onClick={onClick}\r\n            >\r\n                {blockValue}\r\n            </Button>\r\n        </div>\r\n\r\n    )\r\n}\r\n","// @flow\r\nimport * as React from 'react';\r\nimport Square from './Square';\r\nimport './../App.css';\r\nimport {ButtonToolbar} from 'react-bootstrap';\r\n\r\n\r\nexport default class Bord extends React.Component {\r\n    renderSquare(i) {\r\n        return <Square blockValue={this.props.squares[i]}\r\n                       onClick={() => this.props.onClick(i)}\r\n        />\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Bord\">\r\n                <div>\r\n                    <ButtonToolbar className=\"Bord-r-Style\">\r\n\r\n                        {this.renderSquare(0)}\r\n                        {this.renderSquare(1)}\r\n                        {this.renderSquare(2)}\r\n                        {this.renderSquare(3)}\r\n                        {this.renderSquare(4)}\r\n                    </ButtonToolbar>\r\n\r\n                </div>\r\n                <div>\r\n                    <ButtonToolbar className=\"Bord-r-Style\">\r\n\r\n                        {this.renderSquare(5)}\r\n                        {this.renderSquare(6)}\r\n                        {this.renderSquare(7)}\r\n                        {this.renderSquare(8)}\r\n                        {this.renderSquare(9)}\r\n                    </ButtonToolbar>\r\n\r\n                </div>\r\n                <div>\r\n                    <ButtonToolbar className=\"Bord-r-Style\">\r\n\r\n                        {this.renderSquare(10)}\r\n                        {this.renderSquare(11)}\r\n                        {this.renderSquare(12)}\r\n                        {this.renderSquare(13)}\r\n                        {this.renderSquare(14)}\r\n                    </ButtonToolbar>\r\n\r\n                </div>\r\n                <div>\r\n                    <ButtonToolbar className=\"Bord-r-Style\">\r\n\r\n                        {this.renderSquare(15)}\r\n                        {this.renderSquare(16)}\r\n                        {this.renderSquare(17)}\r\n                        {this.renderSquare(18)}\r\n                        {this.renderSquare(19)}\r\n                    </ButtonToolbar>\r\n\r\n                </div>\r\n                <div>\r\n                    <ButtonToolbar className=\"Bord-r-Style\">\r\n\r\n                        {this.renderSquare(20)}\r\n                        {this.renderSquare(21)}\r\n                        {this.renderSquare(22)}\r\n                        {this.renderSquare(23)}\r\n                        {this.renderSquare(24)}\r\n                    </ButtonToolbar>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};","// @flow\r\nimport React, {Component} from 'react';\r\nimport Bord from './Bord';\r\nimport {Button, ButtonGroup} from 'react-bootstrap';\r\n\r\n\r\nexport default class Game extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            stepNumber: '0',\r\n            xIsNext: false,\r\n            winnerFlag: false,\r\n            startGameFlag: false,\r\n            history: [\r\n                {squares: Array().fill(null)}\r\n            ]\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    handleClick(i) {\r\n\r\n        //!** to tack history making copy of existing history\r\n        let history = this.state.history.slice(0, this.state.stepNumber + 1);  //  splice( 0, 0) return no value thats why +1\r\n        // console.log('his', history);\r\n        const lastHist = history[history.length - 1];\r\n        let lasSquare = lastHist.squares.slice(); // make new copy\r\n\r\n\r\n        if (lasSquare[i] || this.state.winnerFlag) // if value ( X/O) exist then do nothing\r\n        {\r\n            return -1;\r\n        }\r\n        lasSquare[i] = this.state.xIsNext ? 'X' : 'O';\r\n        // history = history.concat({lasSquare});\r\n\r\n        this.setState({\r\n            history: history.concat({\r\n                squares: lasSquare\r\n            }),\r\n            // history : [...this.state.history ,  {lasSquare} ], //this isnt working\r\n            xIsNext: !this.state.xIsNext,\r\n            stepNumber: history.length\r\n        })\r\n        if (this.findWineer(lasSquare)) //  if won then close\r\n            return null;\r\n\r\n    }\r\n\r\n    findWineer = (square) => {\r\n        const arr = [\r\n            [0, 1, 2, 3, 4],\r\n            [5, 6, 7, 8, 9],\r\n            [10, 11, 12, 13, 14],\r\n            [15, 16, 17, 18, 19],\r\n            [20, 21, 22, 23, 24],\r\n\r\n            [0, 5, 10, 15, 20],\r\n            [1, 6, 11, 16, 21],\r\n            [2, 7, 12, 17, 22],\r\n            [3, 8, 13, 18, 23],\r\n            [4, 9, 14, 19, 24],\r\n            [0, 6, 12, 18, 19],\r\n            [4, 8, 12, 16, 20]\r\n        ]\r\n        for (let i = 0; i < 12; i++) {\r\n\r\n            const [a, b, c, d, e] = arr[i];\r\n            // console.log(  [a, b , c , d ,e] )\r\n            //     console.log( 'Square' ,   ' a=' , square[a] , ' b=' , square[b] , ' c=' , square[c] ,  ' d=' ,square[d] ,  ' e=' , square[e] );\r\n\r\n            if (square[a] && (square[a] === square[b]) && (square[b] === square[c]) && (square[c] === square[d]) && (square[d] == square[e])) {\r\n                console.log('winner')\r\n                this.setState({winnerFlag: true, startGameFlag: false});\r\n                return 1;\r\n            }\r\n        }\r\n        return -1\r\n    }\r\n    jumpToStepNo = (index) => {\r\n        this.setState({stepNumber: index})\r\n    }\r\n\r\n\r\n    render() {\r\n        const {history, stepNumber, xIsNext} = this.state;\r\n        const current = history[stepNumber].squares; // get the last square value to pass\r\n        const status =  (xIsNext ? 'X' : 'O') + ' Turn';\r\n        const moves = history.map((value, index) => {\r\n            // const desc = value ? 'Go to #' + value : 'Start the Game';\r\n            if (index) {\r\n                return (\r\n\r\n                    <Button\r\n                        key={index}\r\n                        onClick={() => {\r\n                            this.jumpToStepNo(index)\r\n                        }}>\r\n                        {'Step  No# ' + index}\r\n                    </Button>\r\n                )\r\n            }\r\n\r\n        })\r\n\r\n\r\n        return (\r\n            <div className=\"game\">\r\n                {\r\n                    this.state.startGameFlag ? // applying condition\r\n                        <div className=\"game-board\">\r\n                            <Bord\r\n                                // onClick={ (i) => {console.log( \"value\" , i)}}\r\n                                onClick={(i) => {\r\n                                    this.handleClick(i)\r\n                                }}\r\n                                squares={current}\r\n                            />\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                            {this.state.winnerFlag && <h1> Won the game</h1>}\r\n                            <Button\r\n                                onClick={  () => (this.state.winnerFlag) ?\r\n                                    this.setState({\r\n                                        stepNumber : '0' ,\r\n                                        startGameFlag : true,\r\n                                        xIsNext: false,\r\n                                        winnerFlag: false,\r\n                                    })\r\n                                    :\r\n                                    this.setState({startGameFlag: true})  }\r\n                                // onClick={ (this.state.winnerFlag) ?   this.setState({stepNumber : ''}) : this.setState({startGameFlag: true})  }\r\n                                className=\"col-lg-12\">{this.state.winnerFlag ? \"Do you wana Play again...\" : \"Lets Play the Game.....\"}</Button>\r\n\r\n                        </div>\r\n                }\r\n                {\r\n                    this.state.startGameFlag\r\n                    &&\r\n                    <div className=\"game-info\">\r\n                        <div> <h1> {status} </h1> </div>\r\n                        <div>\r\n                            <ButtonGroup vertical>\r\n                                {moves}\r\n                            </ButtonGroup>\r\n                        </div>\r\n                    </div>\r\n\r\n                }\r\n\r\n\r\n            </div>\r\n        );\r\n    };\r\n};","import React from 'react';\nimport Game from './component/Game';\nimport './App.css';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App-headerp\">\n        <Game/>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}